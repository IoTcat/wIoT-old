/// <reference types="node" />
import { isIP } from 'net';
export interface IArpTableRow {
    ip: string;
    mac: string;
    type: 'static' | 'dynamic';
}
export declare type IArpTable = IArpTableRow[];
/**
 * Checks if a MAC address is valid
 * @param mac The MAC address to validate
 */
export declare function isMAC(mac: string): boolean;
/**
 * Retrieves the networks' arp table
 */
export declare function getTable(): Promise<IArpTable>;
/**
 * Gets the MAC address for the given `ip` address
 * @param ip The IP address
 */
export declare function toMAC(ip: string): Promise<string | null>;
/**
 * Gets the IP address for given `mac` address
 * @param mac The MAC address
 */
export declare function toIP(mac: string): Promise<string | null>;
export declare function is(type: 'static' | 'dynamic' | 'undefined', address: string): Promise<boolean>;
declare const _default: {
    getTable: typeof getTable;
    is: typeof is;
    isIP: typeof isIP;
    isMAC: typeof isMAC;
    toIP: typeof toIP;
    toMAC: typeof toMAC;
};
export default _default;
